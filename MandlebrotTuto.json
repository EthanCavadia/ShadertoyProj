{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"// Fork of \"\" by Navalia. https://shadertoy.com/view/-1\n// 2023-09-26 07:12:35\n\nconst vec3 palette[4] = vec3[4](vec3(0.596,0.102,1.000),\n                                vec3(0.802, 0.789, 0.144),\n                                vec3(0.443,0.000,0.012),\n                                vec3(0.314,0.945,0.627));\n\n void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float depth = 16.;\n    float scale = 1.5 / pow(2., depth * abs(sin(iTime / depth)));\n    vec2 offset = vec2(-1.4108, 0.0);\n    //vec2 offset = vec2(iMouse.x, iMouse.y);\n    \n    float aspectRatio = iResolution.x / iResolution.y;\n    float x = scale * 2. * (2. * (fragCoord.x / iResolution.x) - 1.) + offset.x;\n    float y = scale * 2. * (1. / aspectRatio) * (2. * (fragCoord.y / iResolution.y) - 1.) + offset.y;\n\n    /*float aspectRatio = iResolution.x / iResolution.y;\n    float x = 2. * (2. * (fragCoord.x / iResolution.x) - 1.);\n    float y = 2. * (1. / aspectRatio) * (2. * (fragCoord.y / iResolution.y) - 1.);*/\n    \n    bool diverged = false;\n    float x0 = x;\n    float y0 = y;\n    int i;\n    \n    for (i = 0; i < 2000; i++) \n    {\n        if (x*x + y*y > 2000.*2000.) \n        {\n        diverged = true;\n        break;\n        }\n        \n        float xtemp = x*x - y*y + x0;\n        y = 2. * x * y + y0;\n        x = xtemp;\n    }\n    \n    vec3 col;\n    if (diverged) \n    {\n        int nPalette = 4;\n        float gradScale = 1.;\n        float smoothed = log2(log2(x*x + y*y) / 2.);\n        float fColorIndex = (sqrt(float(i) + 10. - smoothed) * gradScale);\n        \n        float colorLerp = fract(fColorIndex);\n        colorLerp = colorLerp*colorLerp*(3.-2.*colorLerp);\n        int colorIndexA = int(fColorIndex) % nPalette;\n        int colorIndexB = (colorIndexA + 1) % nPalette;\n\n        col = mix(palette[colorIndexA], palette[colorIndexB], colorLerp);\n        \n    }else {\n        col = vec3(0.027,0.282,0.471); // black\n    }\n\n    // output color to screen\n    fragColor = vec4(col, 1.);  \n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"-1","date":"1358124981","viewed":0,"name":"","username":"None","description":"","likes":0,"hasliked":0,"tags":[],"published":0}}